CASE  tryb_pracy_dzwig  OF
	0: // wyłączenie	
	D0 := 0;
	D0.0 := 1; // channel 1
	HIOEN( TRUE , K0 , D0, 0);
	PWM_ON := FALSE;
	dzwig.hamulec_X := HAMULEC_ON;	
		
	10: // włączenie
	PWM_ON := TRUE;
	dzwig.hamulec_X := HAMULEC_OFF;
	dzwig.zad_X := 2000;
	tryb_pracy_dzwig := 20;
		

	20: //bazowanie w lewo
	bazowanie := TRUE;
	dzwig.sterowanie_X := 50.0;
	dzwig.hamulec_X := HAMULEC_OFF;
	dzwig.kierunek_X := LEWO;

	IF  dzwig.krancowka_X THEN
		dzwig.hamulec_X := HAMULEC_ON;
		tryb_pracy_dzwig := 21;
	END_IF;
		
	21: // bazowanie odjazd
	dzwig.sterowanie_X := 10.0;
	dzwig.hamulec_X := HAMULEC_OFF;
	dzwig.kierunek_X := PRAWO;

	IF  NOT dzwig.krancowka_X THEN
		dzwig.hamulec_X := HAMULEC_ON;
		DHCMOV( TRUE , 0 , 0 , SD4500 );
		bazowanie := FALSE;
		tryb_pracy_dzwig := 22;
	END_IF;
		
		
	30: // PID autorski
	dzwig.hamulec_X := HAMULEC_OFF;
	PID3.K_gain := 1.0;
	PID3.Ti := 100000.0;
	PID3.Td := 0.0;		
	PID3.T_p := 4.0;
	
	PID3.e_k := DINT_TO_REAL(  dzwig.zad_X - dzwig.enc_X);
	PID3.r_0 := PID3.K_gain*(1.0+(PID3.T_p/(2.0*PID3.Ti))+PID3.Td/PID3.T_p);  //K*( 1+(Tp/(2*Ti))+Td/Tp )
	PID3.r_1 := PID3.K_gain*((PID3.T_p/(2.0*PID3.Ti))-(2.0*PID3.Td/PID3.T_p)-1.0);  //K*( (Tp/(2*Ti))-(2*Td/Tp)-1 );
	PID3.r_2 := PID3.K_gain*PID3.Td/PID3.T_p;  //K*Td/Tp;
	dzwig.sterowanie_X := PID3.r_2 * PID3.e_km2 + PID3.r_1 * PID3.e_km1 + PID3.r_0 * PID3.e_k + dzwig.sterowanie_X_ukm1;
	PID3.e_km1 := PID3.e_k;
	PID3.e_km2 := PID3.e_km1;

	// ograniczenie sterowania z pid i aktualizacja przeszlego sterowania
	IF dzwig.sterowanie_X < -99.0 THEN
		dzwig.sterowanie_X :=-99.0;
		ELSIF dzwig.sterowanie_X >99.0 THEN
		dzwig.sterowanie_X :=99.0;
	END_IF;
	dzwig.sterowanie_X_ukm1 := dzwig.sterowanie_X;
		
	// wybor kierunku bo PWM dziala tylko w jedna strone
	IF dzwig.sterowanie_X >=0.0 THEN 
		dzwig.kierunek_X := PRAWO;
		ELSE
		dzwig.kierunek_X := LEWO;
		dzwig.sterowanie_X := -dzwig.sterowanie_X;
	END_IF;
		
		
	40: // pid producenta
	//	PID( TRUE , ?ANY16_s1? , ?ANY16_s2? , ?ANY16_s3? , ?ANY16_d? );
	;
END_CASE;

// ograniczenia zakresu pracy dzwigu 0-8000 poza bazowaniem
IF NOT bazowanie THEN
	IF dzwig.kierunek_X =PRAWO AND dzwig.enc_X >8000 THEN
		//dzwig.hamulec_X := HAMULEC_ON;
		//dzwig.sterowanie_X := 0.0;
		dzwig.kierunek_X := LEWO;
		dzwig.sterowanie_X := 10.0;
	ELSIF dzwig.kierunek_X = LEWO  AND (dzwig.enc_X < 0 OR dzwig.krancowka_X) THEN
		//dzwig.hamulec_X := HAMULEC_ON;
		//dzwig.sterowanie_X := 0.0;
		dzwig.kierunek_X := PRAWO;
		dzwig.sterowanie_X := 10.0;
	END_IF;
END_IF;

// zmiana ze wzgledu na logikę PWM
dzwig.sterowanie_X := 100.0 - dzwig.sterowanie_X;

// ograniczenia dla PWM
IF dzwig.sterowanie_X < 1.0 THEN
	dzwig.sterowanie_X :=1.0;
	ELSIF dzwig.sterowanie_X >100.0 THEN
	dzwig.sterowanie_X :=100.0;
END_IF;

// wysłanie do PWM
PWM( PWM_ON , REAL_TO_INT(dzwig.sterowanie_X) , K100 , Y0 );

